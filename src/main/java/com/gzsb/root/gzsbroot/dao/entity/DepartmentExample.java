package com.gzsb.root.gzsbroot.dao.entity;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class DepartmentExample   {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table gzsb_department
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table gzsb_department
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table gzsb_department
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gzsb_department
     *
     * @mbg.generated
     */
    public DepartmentExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gzsb_department
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gzsb_department
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gzsb_department
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gzsb_department
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gzsb_department
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gzsb_department
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gzsb_department
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gzsb_department
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gzsb_department
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gzsb_department
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table gzsb_department
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andDepartmentCodeIsNull() {
            addCriterion("DEPARTMENT_CODE is null");
            return (Criteria) this;
        }

        public Criteria andDepartmentCodeIsNotNull() {
            addCriterion("DEPARTMENT_CODE is not null");
            return (Criteria) this;
        }

        public Criteria andDepartmentCodeEqualTo(String value) {
            addCriterion("DEPARTMENT_CODE =", value, "departmentCode");
            return (Criteria) this;
        }

        public Criteria andDepartmentCodeNotEqualTo(String value) {
            addCriterion("DEPARTMENT_CODE <>", value, "departmentCode");
            return (Criteria) this;
        }

        public Criteria andDepartmentCodeGreaterThan(String value) {
            addCriterion("DEPARTMENT_CODE >", value, "departmentCode");
            return (Criteria) this;
        }

        public Criteria andDepartmentCodeGreaterThanOrEqualTo(String value) {
            addCriterion("DEPARTMENT_CODE >=", value, "departmentCode");
            return (Criteria) this;
        }

        public Criteria andDepartmentCodeLessThan(String value) {
            addCriterion("DEPARTMENT_CODE <", value, "departmentCode");
            return (Criteria) this;
        }

        public Criteria andDepartmentCodeLessThanOrEqualTo(String value) {
            addCriterion("DEPARTMENT_CODE <=", value, "departmentCode");
            return (Criteria) this;
        }

        public Criteria andDepartmentCodeLike(String value) {
            addCriterion("DEPARTMENT_CODE like", value, "departmentCode");
            return (Criteria) this;
        }

        public Criteria andDepartmentCodeNotLike(String value) {
            addCriterion("DEPARTMENT_CODE not like", value, "departmentCode");
            return (Criteria) this;
        }

        public Criteria andDepartmentCodeIn(List<String> values) {
            addCriterion("DEPARTMENT_CODE in", values, "departmentCode");
            return (Criteria) this;
        }

        public Criteria andDepartmentCodeNotIn(List<String> values) {
            addCriterion("DEPARTMENT_CODE not in", values, "departmentCode");
            return (Criteria) this;
        }

        public Criteria andDepartmentCodeBetween(String value1, String value2) {
            addCriterion("DEPARTMENT_CODE between", value1, value2, "departmentCode");
            return (Criteria) this;
        }

        public Criteria andDepartmentCodeNotBetween(String value1, String value2) {
            addCriterion("DEPARTMENT_CODE not between", value1, value2, "departmentCode");
            return (Criteria) this;
        }

        public Criteria andFatherCodeIsNull() {
            addCriterion("FATHER_CODE is null");
            return (Criteria) this;
        }

        public Criteria andFatherCodeIsNotNull() {
            addCriterion("FATHER_CODE is not null");
            return (Criteria) this;
        }

        public Criteria andFatherCodeEqualTo(String value) {
            addCriterion("FATHER_CODE =", value, "fatherCode");
            return (Criteria) this;
        }

        public Criteria andFatherCodeNotEqualTo(String value) {
            addCriterion("FATHER_CODE <>", value, "fatherCode");
            return (Criteria) this;
        }

        public Criteria andFatherCodeGreaterThan(String value) {
            addCriterion("FATHER_CODE >", value, "fatherCode");
            return (Criteria) this;
        }

        public Criteria andFatherCodeGreaterThanOrEqualTo(String value) {
            addCriterion("FATHER_CODE >=", value, "fatherCode");
            return (Criteria) this;
        }

        public Criteria andFatherCodeLessThan(String value) {
            addCriterion("FATHER_CODE <", value, "fatherCode");
            return (Criteria) this;
        }

        public Criteria andFatherCodeLessThanOrEqualTo(String value) {
            addCriterion("FATHER_CODE <=", value, "fatherCode");
            return (Criteria) this;
        }

        public Criteria andFatherCodeLike(String value) {
            addCriterion("FATHER_CODE like", value, "fatherCode");
            return (Criteria) this;
        }

        public Criteria andFatherCodeNotLike(String value) {
            addCriterion("FATHER_CODE not like", value, "fatherCode");
            return (Criteria) this;
        }

        public Criteria andFatherCodeIn(List<String> values) {
            addCriterion("FATHER_CODE in", values, "fatherCode");
            return (Criteria) this;
        }

        public Criteria andFatherCodeNotIn(List<String> values) {
            addCriterion("FATHER_CODE not in", values, "fatherCode");
            return (Criteria) this;
        }

        public Criteria andFatherCodeBetween(String value1, String value2) {
            addCriterion("FATHER_CODE between", value1, value2, "fatherCode");
            return (Criteria) this;
        }

        public Criteria andFatherCodeNotBetween(String value1, String value2) {
            addCriterion("FATHER_CODE not between", value1, value2, "fatherCode");
            return (Criteria) this;
        }

        public Criteria andDepartmentNameIsNull() {
            addCriterion("DEPARTMENT_NAME is null");
            return (Criteria) this;
        }

        public Criteria andDepartmentNameIsNotNull() {
            addCriterion("DEPARTMENT_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andDepartmentNameEqualTo(String value) {
            addCriterion("DEPARTMENT_NAME =", value, "departmentName");
            return (Criteria) this;
        }

        public Criteria andDepartmentNameNotEqualTo(String value) {
            addCriterion("DEPARTMENT_NAME <>", value, "departmentName");
            return (Criteria) this;
        }

        public Criteria andDepartmentNameGreaterThan(String value) {
            addCriterion("DEPARTMENT_NAME >", value, "departmentName");
            return (Criteria) this;
        }

        public Criteria andDepartmentNameGreaterThanOrEqualTo(String value) {
            addCriterion("DEPARTMENT_NAME >=", value, "departmentName");
            return (Criteria) this;
        }

        public Criteria andDepartmentNameLessThan(String value) {
            addCriterion("DEPARTMENT_NAME <", value, "departmentName");
            return (Criteria) this;
        }

        public Criteria andDepartmentNameLessThanOrEqualTo(String value) {
            addCriterion("DEPARTMENT_NAME <=", value, "departmentName");
            return (Criteria) this;
        }

        public Criteria andDepartmentNameLike(String value) {
            addCriterion("DEPARTMENT_NAME like", value, "departmentName");
            return (Criteria) this;
        }

        public Criteria andDepartmentNameNotLike(String value) {
            addCriterion("DEPARTMENT_NAME not like", value, "departmentName");
            return (Criteria) this;
        }

        public Criteria andDepartmentNameIn(List<String> values) {
            addCriterion("DEPARTMENT_NAME in", values, "departmentName");
            return (Criteria) this;
        }

        public Criteria andDepartmentNameNotIn(List<String> values) {
            addCriterion("DEPARTMENT_NAME not in", values, "departmentName");
            return (Criteria) this;
        }

        public Criteria andDepartmentNameBetween(String value1, String value2) {
            addCriterion("DEPARTMENT_NAME between", value1, value2, "departmentName");
            return (Criteria) this;
        }

        public Criteria andDepartmentNameNotBetween(String value1, String value2) {
            addCriterion("DEPARTMENT_NAME not between", value1, value2, "departmentName");
            return (Criteria) this;
        }

        public Criteria andWorkTimeAmIsNull() {
            addCriterion("WORK_TIME_AM is null");
            return (Criteria) this;
        }

        public Criteria andWorkTimeAmIsNotNull() {
            addCriterion("WORK_TIME_AM is not null");
            return (Criteria) this;
        }

        public Criteria andWorkTimeAmEqualTo(Date value) {
            addCriterion("WORK_TIME_AM =", value, "workTimeAm");
            return (Criteria) this;
        }

        public Criteria andWorkTimeAmNotEqualTo(Date value) {
            addCriterion("WORK_TIME_AM <>", value, "workTimeAm");
            return (Criteria) this;
        }

        public Criteria andWorkTimeAmGreaterThan(Date value) {
            addCriterion("WORK_TIME_AM >", value, "workTimeAm");
            return (Criteria) this;
        }

        public Criteria andWorkTimeAmGreaterThanOrEqualTo(Date value) {
            addCriterion("WORK_TIME_AM >=", value, "workTimeAm");
            return (Criteria) this;
        }

        public Criteria andWorkTimeAmLessThan(Date value) {
            addCriterion("WORK_TIME_AM <", value, "workTimeAm");
            return (Criteria) this;
        }

        public Criteria andWorkTimeAmLessThanOrEqualTo(Date value) {
            addCriterion("WORK_TIME_AM <=", value, "workTimeAm");
            return (Criteria) this;
        }

        public Criteria andWorkTimeAmIn(List<Date> values) {
            addCriterion("WORK_TIME_AM in", values, "workTimeAm");
            return (Criteria) this;
        }

        public Criteria andWorkTimeAmNotIn(List<Date> values) {
            addCriterion("WORK_TIME_AM not in", values, "workTimeAm");
            return (Criteria) this;
        }

        public Criteria andWorkTimeAmBetween(Date value1, Date value2) {
            addCriterion("WORK_TIME_AM between", value1, value2, "workTimeAm");
            return (Criteria) this;
        }

        public Criteria andWorkTimeAmNotBetween(Date value1, Date value2) {
            addCriterion("WORK_TIME_AM not between", value1, value2, "workTimeAm");
            return (Criteria) this;
        }

        public Criteria andWorkTimePmIsNull() {
            addCriterion("WORK_TIME_PM is null");
            return (Criteria) this;
        }

        public Criteria andWorkTimePmIsNotNull() {
            addCriterion("WORK_TIME_PM is not null");
            return (Criteria) this;
        }

        public Criteria andWorkTimePmEqualTo(Date value) {
            addCriterion("WORK_TIME_PM =", value, "workTimePm");
            return (Criteria) this;
        }

        public Criteria andWorkTimePmNotEqualTo(Date value) {
            addCriterion("WORK_TIME_PM <>", value, "workTimePm");
            return (Criteria) this;
        }

        public Criteria andWorkTimePmGreaterThan(Date value) {
            addCriterion("WORK_TIME_PM >", value, "workTimePm");
            return (Criteria) this;
        }

        public Criteria andWorkTimePmGreaterThanOrEqualTo(Date value) {
            addCriterion("WORK_TIME_PM >=", value, "workTimePm");
            return (Criteria) this;
        }

        public Criteria andWorkTimePmLessThan(Date value) {
            addCriterion("WORK_TIME_PM <", value, "workTimePm");
            return (Criteria) this;
        }

        public Criteria andWorkTimePmLessThanOrEqualTo(Date value) {
            addCriterion("WORK_TIME_PM <=", value, "workTimePm");
            return (Criteria) this;
        }

        public Criteria andWorkTimePmIn(List<Date> values) {
            addCriterion("WORK_TIME_PM in", values, "workTimePm");
            return (Criteria) this;
        }

        public Criteria andWorkTimePmNotIn(List<Date> values) {
            addCriterion("WORK_TIME_PM not in", values, "workTimePm");
            return (Criteria) this;
        }

        public Criteria andWorkTimePmBetween(Date value1, Date value2) {
            addCriterion("WORK_TIME_PM between", value1, value2, "workTimePm");
            return (Criteria) this;
        }

        public Criteria andWorkTimePmNotBetween(Date value1, Date value2) {
            addCriterion("WORK_TIME_PM not between", value1, value2, "workTimePm");
            return (Criteria) this;
        }

        public Criteria andSortIsNull() {
            addCriterion("SORT is null");
            return (Criteria) this;
        }

        public Criteria andSortIsNotNull() {
            addCriterion("SORT is not null");
            return (Criteria) this;
        }

        public Criteria andSortEqualTo(Integer value) {
            addCriterion("SORT =", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortNotEqualTo(Integer value) {
            addCriterion("SORT <>", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortGreaterThan(Integer value) {
            addCriterion("SORT >", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortGreaterThanOrEqualTo(Integer value) {
            addCriterion("SORT >=", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortLessThan(Integer value) {
            addCriterion("SORT <", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortLessThanOrEqualTo(Integer value) {
            addCriterion("SORT <=", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortIn(List<Integer> values) {
            addCriterion("SORT in", values, "sort");
            return (Criteria) this;
        }

        public Criteria andSortNotIn(List<Integer> values) {
            addCriterion("SORT not in", values, "sort");
            return (Criteria) this;
        }

        public Criteria andSortBetween(Integer value1, Integer value2) {
            addCriterion("SORT between", value1, value2, "sort");
            return (Criteria) this;
        }

        public Criteria andSortNotBetween(Integer value1, Integer value2) {
            addCriterion("SORT not between", value1, value2, "sort");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table gzsb_department
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table gzsb_department
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}