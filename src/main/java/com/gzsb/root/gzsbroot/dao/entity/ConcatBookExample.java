package com.gzsb.root.gzsbroot.dao.entity;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

public class ConcatBookExample   {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table gzsb_concat_book
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table gzsb_concat_book
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table gzsb_concat_book
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gzsb_concat_book
     *
     * @mbg.generated
     */
    public ConcatBookExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gzsb_concat_book
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gzsb_concat_book
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gzsb_concat_book
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gzsb_concat_book
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gzsb_concat_book
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gzsb_concat_book
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gzsb_concat_book
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gzsb_concat_book
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gzsb_concat_book
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gzsb_concat_book
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table gzsb_concat_book
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andConcatIdIsNull() {
            addCriterion("CONCAT_ID is null");
            return (Criteria) this;
        }

        public Criteria andConcatIdIsNotNull() {
            addCriterion("CONCAT_ID is not null");
            return (Criteria) this;
        }

        public Criteria andConcatIdEqualTo(Integer value) {
            addCriterion("CONCAT_ID =", value, "concatId");
            return (Criteria) this;
        }

        public Criteria andConcatIdNotEqualTo(Integer value) {
            addCriterion("CONCAT_ID <>", value, "concatId");
            return (Criteria) this;
        }

        public Criteria andConcatIdGreaterThan(Integer value) {
            addCriterion("CONCAT_ID >", value, "concatId");
            return (Criteria) this;
        }

        public Criteria andConcatIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("CONCAT_ID >=", value, "concatId");
            return (Criteria) this;
        }

        public Criteria andConcatIdLessThan(Integer value) {
            addCriterion("CONCAT_ID <", value, "concatId");
            return (Criteria) this;
        }

        public Criteria andConcatIdLessThanOrEqualTo(Integer value) {
            addCriterion("CONCAT_ID <=", value, "concatId");
            return (Criteria) this;
        }

        public Criteria andConcatIdIn(List<Integer> values) {
            addCriterion("CONCAT_ID in", values, "concatId");
            return (Criteria) this;
        }

        public Criteria andConcatIdNotIn(List<Integer> values) {
            addCriterion("CONCAT_ID not in", values, "concatId");
            return (Criteria) this;
        }

        public Criteria andConcatIdBetween(Integer value1, Integer value2) {
            addCriterion("CONCAT_ID between", value1, value2, "concatId");
            return (Criteria) this;
        }

        public Criteria andConcatIdNotBetween(Integer value1, Integer value2) {
            addCriterion("CONCAT_ID not between", value1, value2, "concatId");
            return (Criteria) this;
        }

        public Criteria andConcatNameIsNull() {
            addCriterion("CONCAT_NAME is null");
            return (Criteria) this;
        }

        public Criteria andConcatNameIsNotNull() {
            addCriterion("CONCAT_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andConcatNameEqualTo(String value) {
            addCriterion("CONCAT_NAME =", value, "concatName");
            return (Criteria) this;
        }

        public Criteria andConcatNameNotEqualTo(String value) {
            addCriterion("CONCAT_NAME <>", value, "concatName");
            return (Criteria) this;
        }

        public Criteria andConcatNameGreaterThan(String value) {
            addCriterion("CONCAT_NAME >", value, "concatName");
            return (Criteria) this;
        }

        public Criteria andConcatNameGreaterThanOrEqualTo(String value) {
            addCriterion("CONCAT_NAME >=", value, "concatName");
            return (Criteria) this;
        }

        public Criteria andConcatNameLessThan(String value) {
            addCriterion("CONCAT_NAME <", value, "concatName");
            return (Criteria) this;
        }

        public Criteria andConcatNameLessThanOrEqualTo(String value) {
            addCriterion("CONCAT_NAME <=", value, "concatName");
            return (Criteria) this;
        }

        public Criteria andConcatNameLike(String value) {
            addCriterion("CONCAT_NAME like", value, "concatName");
            return (Criteria) this;
        }

        public Criteria andConcatNameNotLike(String value) {
            addCriterion("CONCAT_NAME not like", value, "concatName");
            return (Criteria) this;
        }

        public Criteria andConcatNameIn(List<String> values) {
            addCriterion("CONCAT_NAME in", values, "concatName");
            return (Criteria) this;
        }

        public Criteria andConcatNameNotIn(List<String> values) {
            addCriterion("CONCAT_NAME not in", values, "concatName");
            return (Criteria) this;
        }

        public Criteria andConcatNameBetween(String value1, String value2) {
            addCriterion("CONCAT_NAME between", value1, value2, "concatName");
            return (Criteria) this;
        }

        public Criteria andConcatNameNotBetween(String value1, String value2) {
            addCriterion("CONCAT_NAME not between", value1, value2, "concatName");
            return (Criteria) this;
        }

        public Criteria andEmailAccountIsNull() {
            addCriterion("EMAIL_ACCOUNT is null");
            return (Criteria) this;
        }

        public Criteria andEmailAccountIsNotNull() {
            addCriterion("EMAIL_ACCOUNT is not null");
            return (Criteria) this;
        }

        public Criteria andEmailAccountEqualTo(String value) {
            addCriterion("EMAIL_ACCOUNT =", value, "emailAccount");
            return (Criteria) this;
        }

        public Criteria andEmailAccountNotEqualTo(String value) {
            addCriterion("EMAIL_ACCOUNT <>", value, "emailAccount");
            return (Criteria) this;
        }

        public Criteria andEmailAccountGreaterThan(String value) {
            addCriterion("EMAIL_ACCOUNT >", value, "emailAccount");
            return (Criteria) this;
        }

        public Criteria andEmailAccountGreaterThanOrEqualTo(String value) {
            addCriterion("EMAIL_ACCOUNT >=", value, "emailAccount");
            return (Criteria) this;
        }

        public Criteria andEmailAccountLessThan(String value) {
            addCriterion("EMAIL_ACCOUNT <", value, "emailAccount");
            return (Criteria) this;
        }

        public Criteria andEmailAccountLessThanOrEqualTo(String value) {
            addCriterion("EMAIL_ACCOUNT <=", value, "emailAccount");
            return (Criteria) this;
        }

        public Criteria andEmailAccountLike(String value) {
            addCriterion("EMAIL_ACCOUNT like", value, "emailAccount");
            return (Criteria) this;
        }

        public Criteria andEmailAccountNotLike(String value) {
            addCriterion("EMAIL_ACCOUNT not like", value, "emailAccount");
            return (Criteria) this;
        }

        public Criteria andEmailAccountIn(List<String> values) {
            addCriterion("EMAIL_ACCOUNT in", values, "emailAccount");
            return (Criteria) this;
        }

        public Criteria andEmailAccountNotIn(List<String> values) {
            addCriterion("EMAIL_ACCOUNT not in", values, "emailAccount");
            return (Criteria) this;
        }

        public Criteria andEmailAccountBetween(String value1, String value2) {
            addCriterion("EMAIL_ACCOUNT between", value1, value2, "emailAccount");
            return (Criteria) this;
        }

        public Criteria andEmailAccountNotBetween(String value1, String value2) {
            addCriterion("EMAIL_ACCOUNT not between", value1, value2, "emailAccount");
            return (Criteria) this;
        }

        public Criteria andSenderIsNull() {
            addCriterion("SENDER is null");
            return (Criteria) this;
        }

        public Criteria andSenderIsNotNull() {
            addCriterion("SENDER is not null");
            return (Criteria) this;
        }

        public Criteria andSenderEqualTo(String value) {
            addCriterion("SENDER =", value, "sender");
            return (Criteria) this;
        }

        public Criteria andSenderNotEqualTo(String value) {
            addCriterion("SENDER <>", value, "sender");
            return (Criteria) this;
        }

        public Criteria andSenderGreaterThan(String value) {
            addCriterion("SENDER >", value, "sender");
            return (Criteria) this;
        }

        public Criteria andSenderGreaterThanOrEqualTo(String value) {
            addCriterion("SENDER >=", value, "sender");
            return (Criteria) this;
        }

        public Criteria andSenderLessThan(String value) {
            addCriterion("SENDER <", value, "sender");
            return (Criteria) this;
        }

        public Criteria andSenderLessThanOrEqualTo(String value) {
            addCriterion("SENDER <=", value, "sender");
            return (Criteria) this;
        }

        public Criteria andSenderLike(String value) {
            addCriterion("SENDER like", value, "sender");
            return (Criteria) this;
        }

        public Criteria andSenderNotLike(String value) {
            addCriterion("SENDER not like", value, "sender");
            return (Criteria) this;
        }

        public Criteria andSenderIn(List<String> values) {
            addCriterion("SENDER in", values, "sender");
            return (Criteria) this;
        }

        public Criteria andSenderNotIn(List<String> values) {
            addCriterion("SENDER not in", values, "sender");
            return (Criteria) this;
        }

        public Criteria andSenderBetween(String value1, String value2) {
            addCriterion("SENDER between", value1, value2, "sender");
            return (Criteria) this;
        }

        public Criteria andSenderNotBetween(String value1, String value2) {
            addCriterion("SENDER not between", value1, value2, "sender");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("REMARK is null");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("REMARK is not null");
            return (Criteria) this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("REMARK =", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("REMARK <>", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("REMARK >", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("REMARK >=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("REMARK <", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("REMARK <=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("REMARK like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("REMARK not like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkIn(List<String> values) {
            addCriterion("REMARK in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotIn(List<String> values) {
            addCriterion("REMARK not in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("REMARK between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("REMARK not between", value1, value2, "remark");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table gzsb_concat_book
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table gzsb_concat_book
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}